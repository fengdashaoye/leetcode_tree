Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

这道题就非常简单了，计算其深度，利用一个全局变量，然后利用先序遍历，每遍历到一个叶子节点，比较其路径长度和全局变量，及时更新全局变量。

代码:
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int length = 0;
    public int maxDepth(TreeNode root) {
        if(root == null){
            return length;
        }
        calculate(root, 1);
        return length;
        
    }
    public void calculate(TreeNode root, int deep){
        if(root.left == null && root.right == null){
            if(deep > length){
                length = deep;
            }
            return;
        }
        if(root.left != null){
            calculate(root.left, deep + 1);
        }
        if(root.right != null){
            calculate(root.right, deep + 1);
        }
        
    }
}
