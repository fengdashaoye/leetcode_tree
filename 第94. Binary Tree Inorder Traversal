Given a binary tree, return the inorder traversal of its nodes' values.

For example:
Given binary tree [1,null,2,3],
   1
    \
     2
    /
   3
return [1,3,2]

给一棵树，返回它的中序遍历，挺简单的。
代码：
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new ArrayList<Integer>();
        if(root == null){
            return result;
        }
        zhongxu(result, root);
        return result;
    }
    public List<Integer> zhongxu(List<Integer> result, TreeNode root){
        if(root == null){
            return result;
        }
        if(root.left != null){
            zhongxu(result, root.left);
        }
        result.add(root.val);
        if(root.right != null){
            zhongxu(result, root.right);
        }
        return result;
    }
}
